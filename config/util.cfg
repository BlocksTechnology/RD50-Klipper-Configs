[delayed_gcode is_loaded]
gcode:
  {% set psv = printer.save_variables.variables %}
  {% set motion_state = printer["filament_motion_sensor flow_Sensor_" + psv.current_extruder|string ].filament_detected %}
  M118 Filament flow is: {motion_state}
  {% if motion_state %}
    SET_PIN PIN=enable_feeder_{psv.current_extruder} VALUE=1.0 
    MANUAL_STEPPER STEPPER=feeder_{psv.current_extruder} ENABLE=1 SET_POSITION=100
    MANUAL_STEPPER STEPPER=feeder_{psv.current_extruder} MOVE=0 SPEED=10 SYNC=0 #10 mm/s
    M83
    G1 E-100 F600
    G90
    UPDATE_DELAYED_GCODE ID=PUSH_LOOP DURATION=10
    MANUAL_STEPPER STEPPER=feeder_{psv.current_extruder} ENABLE=1 SET_POSITION=1400
  {% else %}
    M118 No filament loaded.
  {% endif %}


[gcode_macro _list_Variables]
gcode:
  {% set psv = printer.save_variables.variables %}
  M118 current extruder: {psv.current_extruder}
  M118 Filament is loaded: {psv.filament_loaded}
  M118 Filament is: {psv.filament_type_loaded}
  M118 Filament temperature is: {psv.filament_temp}
  M118 Bed temperature is: {psv.bed_temp}
  {% set var = 2 %}
  M118 feeder_{var} 


[gcode_macro list_macros]
description: Lists registered macros (and optionally show variable state).
  Usage: LISTVARS SEARCH=<search_string> VARS=<0|1> SILENT=<0|1>
variable_macros: {}
gcode:
  # Load the config state once and save it.
  {% if not macros %}
    {% set renames = {} %}
    {% for k in printer.configfile.config %}
      {% if k.lower().startswith("gcode_macro") and
            printer.configfile.config[k].rename_existing %}
          {% set name = k.split(None, 1)[1] | lower %}
          {% set dummy = renames.__setitem__(name,
                          [printer.configfile.config[k].rename_existing|lower] +
                            renames[name]|default([])) %}
      {% endif %}
    {% endfor %}
    {% for k in printer %}
      {% if k.lower().startswith("gcode_macro") %}
        {% set name = k.split(None, 1)[1] | lower %}
        {% set dummy = macros.__setitem__(name, renames[name]|default([])) %}
      {% endif %}
    {% endfor %}
  {% endif %}

  {% if params.SILENT|default(0)|int == 0 %}
    _LIST_MACROS_DISPLAY {rawparams}
  {% endif %}
  

[gcode_macro _list_macros_display]
gcode:
  {% set SEARCH = params.SEARCH | default(params.S) | default("") | lower %}
  {% set VARS = params.VARS | default(params.V) | default(0) | int != 0 %}

  {% set macros = printer["gcode_macro list_macros"].macros %}
  {% set output = [] %}
  {% for k in macros %}
    {% if SEARCH in k | lower %}
      {% set line = k ~ ((" (renames: %s)" % (macros[k]|join(","))) if macros[k]
                          else "") %}
      {% set outvars = [] %}
      {% if VARS %}
        {% for v in printer["gcode_macro " ~ k] | sort %}
          {% set dummy = outvars.append("\n* %s: %s" %
                           (v, printer["gcode_macro " ~ k][v]|string)) %}
        {% endfor %}
      {% endif %}
      {% set dummy = output.append(line + outvars | join("")) %}
    {% endif %}
  {% endfor %}
  { action_respond_info(output | sort | join("\n")) }



#[gcode_macro SET_HEATER_TEMPERATURE]
#rename_existing: _SET_HEATER_TEMPERATURE
#gcode:
#  {% set psv = printer.save_variables.variables %}
#  {% if rawparams %}
#    {% set target_temp = rawparams.split('=')[2] %}
#    {% set target_heater = rawparams.split('=')[1].split(' ')[0] %}
#    
#    {% if target_heater == 'extruder' %}
#      {% if psv.printcore_type_1 == 'Standard_Temperature' %}
#        {% set target_temp = [275, target_temp | int] | min %}
#      {% elif psv.printcore_type_1 == 'High_Temperature' %}
#        {% set target_temp = [400, target_temp | int] | min %}
#      {% else %}
#        {% set target_temp = [0, target_temp | int] | min %}
#      {% endif %}
#    {% endif %}
#
#    {% if target_heater == 'extruder1' %}
#      {% if psv.printcore_type_2 == 'Standard_Temperature' %}
#        {% set target_temp = [275, target_temp | int] | min %}
 #     {% elif psv.printcore_type_2 == 'High_Temperature' %}
 #       {% set target_temp = [400, target_temp | int] | min %}
 #     {% else %}
 #       {% set target_temp = [0, target_temp | int] | min %}
#     {% endif %}
#    {% endif %}
#
 #   _SET_HEATER_TEMPERATURE HEATER={target_heater} TARGET={target_temp}
#  {% else %}
 #   _SET_HEATER_TEMPERATURE
 # {% endif %}
#
[gcode_macro TEMP_CHECK]
description: Check temperature on the nozzle, heat the nozzle if needed 
gcode: 
    {% if rawparams %}
      {% set temp = params.TEMPERATURE | default(220) | float %}
      {% set wait = params.W | default(0) | int %}
      
      {% if 'T1' in params %}
        {% if printer.extruder.target != 0 and wait == 1 %}
          {% if printer.extruder.temperature < printer.extruder.target %}
            M109 T0 S{printer.extruder.target|float}
          {% endif %}
        {% else %}
          {% if printer.extruder.target < temp %}
            M109 T0 S{temp}
          {% endif %}
        {% endif %}
        {% if wait == 1 %}
          M109 T0 S{temp}
        {% endif %}
      {% endif %}

      {% if 'T2' in params %}
        {% if printer.extruder1.target != 0 and wait == 1 %}
          {% if printer.extruder1.temperature < printer.extruder1.target %}
            M109 T1 S{printer.extruder1.target|float}
          {% endif %}
        {% else %}
          {% if printer.extruder1.target < temp %}
            M109 T1 S{temp}
          {% endif %}
        {% endif %}
        {% if wait == 1 %}
            M109 T1 S{temp}
        {% endif %}
      {% endif %}

      {% if 'T2' not in params and 'T1' not in params %}
        {action_raise_error("Unable to heat, not Toolhead specified (Missing T1 or T2)")}
      {% endif %}
    {% endif %}