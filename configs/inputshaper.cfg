## Input Shaper Toolhead 1
[adxl345 AccelToolhead_1]
cs_pin: EBBTool_1: PB12
spi_speed:1000000
spi_software_sclk_pin: EBBTool_1: PB10
spi_software_mosi_pin: EBBTool_1: PB11
spi_software_miso_pin: EBBTool_1: PB2
#axes_map: -y,z,x                 # Não sei bem se devia estar a inverter a polaridade aqui, mas depende pode funcionar corretamente
axes_map: y,z,x                 # Não sei bem se devia estar a inverter a polaridade aqui, mas depende pode funcionar corretamente
rate:3200

## Input Shaper Toolhead 2
[adxl345 AccelToolhead_2]
cs_pin: EBBTool_2: PB12
spi_speed:1000000
spi_software_sclk_pin: EBBTool_2: PB10
spi_software_mosi_pin: EBBTool_2: PB11
spi_software_miso_pin: EBBTool_2: PB2
#axes_map: -y,z,x
axes_map: -y,z,x
rate:3200

# Acho que não posso configurar dois resonance_testers assim porque so o ultimo e que fica atribuido no klipper 
[resonance_tester]
accel_chip: 
  adxl345 AccelToolhead_1
probe_points: 250, 250, 20                            #Can probe additional points by making a list.

[resonance_tester]
accel_chip:adxl345 AccelToolhead_2 
probe_points: 250, 250, 20                            #Can probe additional points by making a list.


#Leave this one blank a macro will set the inputshaper
[input_shaper]
#shaper_freq_x:68.2
#shaper_type_x:zv
#shaper_freq_y:23
#shaper_type_y:mzv

#Based on https://github.com/rootiest/zippy-klipper_config/blob/master/extras/shaper/ADXL_SHAPER.cfg
# In Dual carriage the y shaper type and frequency shoud and must be the same for both printheads
#[gcode_shell_command adxl_shape_x]
#command: sh ~/home/biqu/klipper/printer_data/config/shaper/adxl_shape_x.sh		# edit: ´~/printer_data/config/shaper/´ to where your .sh file lays
#timeout: 60.
#verbose: True

#[gcode_shell_command adxl_shape_y]
#command: sh ~/home/biqu/klipper/printer_data/config/shaper/adxl_shape_y.sh		# edit: ´~/printer_data/config/shaper/´ to where your .sh file lays
#timeout: 60.
#verbose: True

[gcode_macro IDEXSHAPER]
description: Macro for automatic input shaper for IDEX dual carriage
gcode:
  # Activate Toolhead 2, first to run calibration
  SET_DUAL_CARRIAGE CARRIAGE=1
  SHAPER_CALIBRATE  CHIP='adxl345 AccelToolhead_2' 
  SET_DUAL_CARRIAGE CARRIAGE=0
  SHAPER_CALIBRATE  CHIP='adxl345 AccelToolhead_1'

[delayed_gcode SETSHAPER]
initial_duration:0.1
gcode:
    SET_DUAL_CARRIAGE CARRIAGE=1
    SET_INPUT_SHAPER SHAPER_TYPE_X=zv SHAPER_FREQ_X=50.7
    #SET_INPUT_SHAPER SHAPER_TYPE_Y=mzv SHAPER_FREQ_Y=23
    SET_INPUT_SHAPER SHAPER_TYPE_Y=zv SHAPER_FREQ_Y=24.8
    SET_DUAL_CARRIAGE CARRIAGE=0
#    SET_INPUT_SHAPER SHAPER_TYPE_X=mzv SHAPER_FREQ_X=66.8
    SET_INPUT_SHAPER SHAPER_TYPE_X=zv SHAPER_FREQ_X=55.4
    #SET_INPUT_SHAPER SHAPER_TYPE_Y=mzv SHAPER_FREQ_Y=23
    SET_INPUT_SHAPER SHAPER_TYPE_Y=zv SHAPER_FREQ_Y=24.8
    UPDATE_DELAYED_GCODE ID=SETSHAPER DURATION=0
#### COMMANDS ####
# SHAPER_CALIBRATE CHIP='adxl345 AccelToolhead_1'                        #Can call a accelerometer by specifying the chip adxl345 i'm going to use 
# ACCELEROMETER_MEASURE CHIP=<chip name> NAME=<name of the file>         #It'll record the accelerometer data, run the command once starts recording, run it again stops recording


#### PROBLEMS ####
#
#
#  Preciso de correr o input shaper um de cada vez para cada cabeça
#  Ambas as cabeças precisam te ter o mesmo resultado em Y 
#  Não posso definir dois parametros resonance_tester, so ultimo que foi definido é que é utilizado
#  Tenho mais do que um comando onde posso fazer testes de ressonancias e calibrar o shaper, ainda assim tenho mais um comando para fazer auto calibrate do input shaper 
#  
#
#

#### INFORMATION ####
#
#   TEST RESONANCES -> Not really useful for input shaper calibration but can be used to study printer resonances
#                      in-depth and to check, for example, belt tension.
#   For this use graph_accelerometer.py to process the generated files
#   E.G
#     TEST_RESONANCES AXIS=1,1 OUTPUT=raw_data
#     TEST_RESONANCES AXIS=1,-1 OUTPUT=raw_data
#     - Then run the command :
#     ~/klipper/scripts/graph_accelerometer.py -c /tmp/raw_data_axis*.csv -o /tmp/resonances.png
#
#
#
#   INPUT SHAPING AUTO CALIBRATION -> automatically run tests for the input shaping calibration
#
#    Run the command -> SHAPER_CALIBRATE AXIS=<X Y OR Z OR NONE IF TEST IS FOR ALL>
#     
