[bed_mesh]
speed: 300
horizontal_move_z: 5
#mesh_min: 22.0, 50.0
#mesh_min: 15.0, 16
mesh_min: 57.0, 54
#mesh_min: 50.0, 50.0
mesh_max: 443.0, 446.0
#probe_count: 5,5
probe_count:6,6
#probe_count: 15,15
mesh_pps: 8,8
algorithm: bicubic
bicubic_tension: 0.2
#faulty_region_1_min: 6, 8.75
#faulty_region_1_max: 
#faulty_region_2_min:
#faulty_region_2_max:
#faulty_region_3_min:
#faulty_region_3_max:
#faulty_region_4_min:
#faulty_region_4_max:

[force_move]
enable_force_move: True

[gcode_arcs]
resolution: 0.9

[safe_z_home]
home_xy_position: 250, 250
speed: 200.0
z_hop: 5.0
z_hop_speed: 15.0
move_to_previous: True

#[homing_override]
#gcode:
#    #G28.1
#    CUSTOM_G28
#axes: xyz

[screws_tilt_adjust]
screw1: 9.50, 0.00
screw1_name: front left screw
screw2: 299.50, 0.0
screw2_name: front right screw
screw3: 159.95, 169.99
screw3_name: back middle screw
screw_thread: CW-M3


[z_tilt]:
z_positions: 
  #50,50
  30,30
#  450,50
  470, 30
#  282, 450
  282, 470
points:
# 50,50
#  480,50
#  282, 450
#  282, 50 
# 480, 450
# 50, 450
  30,30
  490,30
  282, 470
speed:200
horizontal_move_z: 5
retries: 6
retry_tolerance: 0.02

[skew_correction]


##[z_thermal_adjust]          -> Talvez não seja necessario ja, mas é para compensar o z em relação a temperatura, tavez seja bom porque a cama é muito grande.

###########################################################################################################################
############################# MACROS RELATED TO HOMING, PROBING AND ALL RELATED CALIBRATIONS ############################## 
###########################################################################################################################

############################################################# 1 ###########################################################
################################ LAZY HOME (ONLY HOME AXIS THAT WERE NOT PREVIOUSLY HOMED) ################################
###########################################################################################################################
#[gcode_macro CUSTOM_G28]
#description: Wraps the G28 command to add the Marlin "O" parameter so that
#  already homed axes will not be homed again. See the Klipper documentation on
#  G28 for the behavior of the other parameters.
#  Usage: G28 [O] ...
#gcode:
#  {% set speed  = params.SPEED|default(printer.configfile.settings.printer.max_velocity)|int %}
#  #Check homed Axis
#  {% set axes = 'XYZ'|select('in', params.AXES|default("XYZ")|upper|list) %}
#  {% set axes = axes|reject('in', printer.toolhead.homed_axes|upper)|join() %}
#  #Home remaining axes
#  {action_respond_info("homing : %s"%(axes))}
#  #{G28}{% for k in axes %}{' ' ~ k}{% endfor %}
#  {% if 'Z' in axes %}
#      G90
#      SET_KINEMATIC_POSITION Z=0
#      G0 Z10 F600
#      M84
#    {% endif %}
#  {%for axis in axes%}
#    {% if 'Z' in axis %} # NAO TEM EM CONTA SE O X E Y JA DERAM HOME 
#      G0 X282 Y250 F300
#      G28 Z
#      G0 X0 Y0 F300
#    {% endif %}
#    {% if 'X' or 'Y' in axis %}
#      G28 {axis}   
#  {% endfor %}
#  # Now homes each axis that was not previously homed, but in each axis home it lowers the bed, i don't need to lower the bed more than one time 
 
 
############################################################ 2 ############################################################
########################################## CALIBRATE Z OFFSET FOR BOTH TOOHEADS ###########################################
###########################################################################################################################
[gcode_macro G12]
description: Passes the nozzle on the wiper in order to clean it
  Can be toolhead1, toolhead2 or both
gcode:
#-50 A - 36 CABEÇA 1 
#TODO Can use variable parmeters instead of fixed coordinates here
  {% if rawparams %}
    {% set head = rawparams.split('=')[1] %}
    { action_respond_info("There are params") }
    { action_respond_info(head) }
    {% if head == 'extruder1' %}  
      SET_DUAL_CARRIAGE CARRIAGE=0
      G1 X-50 F{50*60}
      G1 X-36 F{50*60}
      G1 X-50 F{50*60}
      G1 X-36 F{50*60}
      G1 X0 F{50*60}
    {% elif head == "extruder2"%}
      SET_DUAL_CARRIAGE CARRIAGE=1
      G1 X567 F{80*60}
      G1 X550 F{80*60}
      G1 X567 F{80*60}
      G1 X550 F{80*60}
      G1 X567 F{80*60}
      G1 X550 F{80*60}
      G1 X575 F{80*60}
    {% endif %}
  {% else %}
    SET_DUAL_CARRIAGE CARRIAGE=0
    #G90
    G1 X-50 F{80*60}
    G1 X-36 F{80*60}
    G1 X-50 F{80*60}
    G1 X-36 F{80*60}
    G1 X-50 F{80*60}
    G1 X-36 F{80*60}
    G1 X-67 F{80*60}
    SET_DUAL_CARRIAGE CARRIAGE=1
    G1 X567 F{80*60}
    G1 X550 F{80*60}
    G1 X567 F{80*60}
    G1 X550 F{80*60}
    G1 X567 F{80*60}
    G1 X550 F{80*60}
    G1 X570 F{80*60}
    SET_DUAL_CARRIAGE CARRIAGE=0
  {% endif %}
[gcode_macro _clean_nozzle_end]
gcode:
  TURN_OFF_HEATERS
  M104 T0 S0
  M104 T1 S0
  RESPOND TYPE=command MSG="action:prompt_end"
  RESPOND TYPE=command MSG="action_prompt_begin Extruders Cooling"
  RESPOND TYPE=command MSG="action:prompt_footer_button OK|RESPOND TYPE=command MSG=action:prompt_end|info"
  
  _calibrate_z_idex

[gcode_macro _clean_nozzle_start]
gcode:
  RESPOND TYPE=command MSG="action:prompt_end"
  RESPOND TYPE=command MSG="action:prompt_begin Clean the noozle"
  RESPOND TYPE=command MSG="action:prompt_text Extruders Heating. After reaching the temperature clean the nozzle and hit OK to proceed to z calibration."
  RESPOND TYPE=command MSG="action:prompt_footer_button OK|_clean_nozzle_end|info"
  RESPOND TYPE=command MSG="action:prompt_show"
  M104 T0 S170
  M104 T1 S170
  M109 T0 S180
  M109 T1 S180
  # Retract a little bit of filament 
  M83
  G1 E20 F{35 * 60}
  #Activate toolhead1 RETRACT A BIT ASWELLL
  ACTIVATE_EXTRUDER EXTRUDER=extruder1
  SET_DUAL_CARRIAGE CARRIAGE=1
  G1 E20 F{35 * 60}
  #ACTIVATE THE MAIN EXTRUDER AGAIN
  ACTIVATE_EXTRUDER EXTRUDER=extruder
  SET_DUAL_CARRIAGE CARRIAGE=0
  #Activate blowers for cooling 
  SET_FAN_SPEED FAN=blower_0 SPEED=255
  SET_FAN_SPEED FAN=blower_1 SPEED=255
  G12
  
#Before the z_offset calibration we need clean the noozle and retract a little so it doesn't ooze
[gcode_macro _calibrate_z_idex]
gcode:
 # Speed
  RESPOND TYPE=command MSG="action:prompt_end"
  {% set speed  = params.SPEED|default(printer.configfile.settings.printer.max_velocity)|int %}
  #{% set safe_x_disctance = printer["configfile"].config["dual_extruder"]%}
  {% set safe_x_distance = printer.configfile.settings.dual_carriage.safe_distance%}
  { action_respond_info("safe_x_distanca %d " % (safe_x_distance)) }
    
  #Find x and y center points toolhead0
  #{% set x_center = (printer.toolhead.axis_minimum.x|float + printer.toolhead.axis_maximum.x|float ) / 2 %}
  #{% set y_center = (printer.toolhead.axis_minimum.y|float + printer.toolhead.axis_maximum.y|float ) / 2 %}
  {% set zSafeHomeConfig = printer["configfile"].config["safe_z_home"] %}
  {% set x_center_toolhead0 = zSafeHomeConfig.home_xy_position.split(",")[0]|float %}
  {% set y_center_toolhead0 = zSafeHomeConfig.home_xy_position.split(",")[1]|float %}
  #Find the x and y center points toolhead1
  #{% set x_center_toolhead1 = x_center_toolhead0 + 38 | float %}
  {% set x_center_toolhead1 = x_center_toolhead0 + safe_x_distance | float %}
  #{% set y_center_toolhead1 = y_center_toolhead0 + 40 | float %}
  {% set y_center_toolhead1 = y_center_toolhead0 | float %}
  {action_respond_info("SAFE ZZ HOME ->  %s "%(x_center_toolhead1))}
  {action_respond_info("SAFE ZZ HOME ->  %s "%(y_center_toolhead1))}
  #Place toolhead 0 at center of the bed 
 # G0 X{x_center_toolhead0 - 20} Y{y_center_toolhead0 - 20} F{speed * 60}
  G0 X{x_center_toolhead0} Y{y_center_toolhead0} F{speed * 60}
  #Activate toolhead1
  ACTIVATE_EXTRUDER EXTRUDER=extruder1
  SET_DUAL_CARRIAGE CARRIAGE=1
  #G0 X{x_center_toolhead1} Y{y_center_toolhead1} F{speed * 10}
  G0 X{x_center_toolhead1}  F{speed * 20}
  ACTIVATE_EXTRUDER EXTRUDER=extruder
  SET_DUAL_CARRIAGE CARRIAGE=0
  PROBE_CALIBRATE
  # Check if i want to do the automatic probe calibrate or i want the manual probe calibrate
  #SAVE_CONFIG

[gcode_macro telll]
gcode:
  #{% set safe_x_disctance = printer["configfile"].config["safe_distance"]%}
  {% set safe_x_distance = printer.configfile.settings.dual_carriage.safe_distance %}
  { action_respond_info("safe_x_distanca %d " % (safe_x_distance)) }
  
[gcode_macro CALIBRATE_Z_IDEX]
description: 
  On the IDEX system calculate the z_offset of both heads, 
  places both heads at the center of the bed and then goes into the 
  PROBE_CABLIBRATE routine.
  The user need to move the second head up and down to get the z_offset calibration.
variable_toolhead_0_x:0
variable_toolhead_0_y:0
variable_toolhead_0_z_offset:0
gcode:
  {action_respond_info("CALIBRATE_Z_IDEX -> last_z_offset: %d "%(printer.probe.last_z_result))}
  #Check if Axis are homed 
  {% if 'XYZ' not in printer.toolhead.homed_axes|upper %}
    #CUSTOM_G28      Later try and implement lazy loading
    RESPOND TYPE=error MSG="Must home axes first -> Trying homing"
    {action_raise_error("Must home axes first! -> Trying homing")}
  {% endif %}
  #  CLEAN_NOZZLE_ROUTINE
  #Check if the nozzle is clean or not
  RESPOND TYPE=command MSG="action:prompt_begin NoozleClean"
  RESPOND TYPE=command MSG="action:prompt_text Is the noozle Clean?"
  RESPOND TYPE=command MSG="action:prompt_footer_button Yes|_calibrate_z_idex|info"
  RESPOND TYPE=command MSG="action:prompt_footer_button No|_clean_nozzle_start|error"
  RESPOND TYPE=command MSG="action:prompt_show"
###########################################################################################################################
###########################################################################################################################