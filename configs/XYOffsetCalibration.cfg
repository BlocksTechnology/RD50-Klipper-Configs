[gcode_macro _prime_Nozzle]
gcode:
  {% set psv = printer.save_variables.variables %}
  {% if psv.current_extruder == 1 %}
    M109 S{psv.filament_temp_1}
  {% elif psv.current_extruder == 2 %}
    M109 S{psv.filament_temp_2}
  {% endif %}

  G92 E0 # Specify Extruder is at position 0
  M83 # Relative Coordinates
  G1 E50 F300
  G92 E0

[gcode_macro _print_Horizontal]
variable_line_number: 0
variable_line_spacing: 0
variable_line_height: 0
variable_line_top: 0
variable_extrude_per_mm: 0
gcode:
  #M118 _print_Horiz line number:{line_number}
  #M118 _print_Horiz line spacing:{line_spacing}
  #M118 _print_Horiz line height:{line_height}
  #M118 _print_Horiz line top:{line_top}
  #M118 _print_Horiz extrude per mm:{extrude_per_mm}

  {% for l in range(line_number + 1) %}
    G1 X{line_spacing} E{ (line_spacing * extrude_per_mm) | abs}
    G1 Y{line_height} E{ (line_height * extrude_per_mm) | abs} 
    G1 X{line_top} E{ (line_top * extrude_per_mm) | abs}
    G1 Y{line_height|int * -1} E{ (line_height * extrude_per_mm) | abs} 
  {% endfor %}
  
[gcode_macro _print_Vertical]
variable_line_number: 0
variable_line_spacing: 0
variable_line_height: 0
variable_line_top: 0
variable_extrude_per_mm: 0
gcode:
  #M118 _print_Vert line number:{line_number}
  #M118 _print_Vert line spacing:{line_spacing}
  #M118 _print_Vert line height:{line_height}
  #M118 _print_Vert line top:{line_top}
  #M118 _print_Vert extrude per mm:{extrude_per_mm}
  
  {% for l in range(line_number + 1) %}
    G1 Y{line_spacing} E{ (line_spacing * extrude_per_mm) | abs}
    G1 X{line_height} E{ (line_height * extrude_per_mm) | abs} 
    G1 Y{line_top} E{ (line_top * extrude_per_mm) | abs}
    G1 X{line_height|int * -1} E{ (line_height * extrude_per_mm) | abs} 
  {% endfor %}

[gcode_macro _park_Nozzle]
variable_x_home_position: 0 #X{printer.toolhead.axis_minimum.x + 5}
gcode:
    G91 #Relative Coordinates
    G1 Z2 E-0.1 F500
    G90 #Absolute Coordinates
    G1 X{x_home_position} F12000

[gcode_macro _XY_Calibration]
variable_prime: False
variable_line_number: 0
variable_line_spacing: 0
variable_line_height: 0 
variable_line_top: 0
variable_extrude_per_mm: 0
variable_line_spacing_2: 0
variable_initial_x_horizontal: 0
variable_initial_y_horizontal: 0
variable_initial_x_horizontal_2: 0
variable_initial_y_horizontal_2: 0
variable_initial_x_vertical: 0
variable_initial_y_vertical: 0
variable_initial_x_vertical_2: 0
variable_initial_y_vertical_2: 0
gcode:
  M118 _XY_Calib. line number:{line_number}
  M118 _XY_Calib. line spacing:{line_spacing}
  M118 _XY_Calib. line height:{line_height}
  M118 _XY_Calib. line top:{line_top}
  M118 _XY_Calib. extrude per mm:{extrude_per_mm}
  M118 _XY_Calib. line spacing 2:{line_spacing_2}
  M118 _XY_Calib. initial x horizontal:{initial_x_horizontal}
  M118 _XY_Calib. initial y horizontal:{initial_y_horizontal}
  M118 _XY_Calib. initial x horizontal 2:{initial_x_horizontal_2} 
  M118 _XY_Calib. initial y horizontal 2:{initial_y_horizontal_2} 
  M118 _XY_Calib. initial x vertical:{initial_x_vertical} 
  M118 _XY_Calib. initial y vertical:{initial_y_vertical} 
  M118 _XY_Calib. initial x vertical 2:{initial_x_vertical_2} 
  M118 _XY_Calib. initial y vertical 2:{initial_y_vertical_2} 

  G28 X Y
  
  {% if prime %}
    _prime_Nozzle 
  {% else %}
    M83 # Relative Coordinates for extruder only
    G1 E0.1
  {% endif %}

  #
  # Horizontal Print in tool 0
  #
  G90 # Absolute Coordinates for all axes
  M83 # Relative Coordinates for extruder only
  
  # Going to the start of the "brim"
  G1 X{initial_x_horizontal_2} Y{initial_y_horizontal - 2} E-0.1 F12000
  G1 Z0.2 E0.5 F2000

  # Making the U turn of the "brim"
  G1 X{initial_x_horizontal} E{(initial_x_horizontal_2 - initial_x_horizontal) * extrude_per_mm} F3000
  
  # Going to start of calibration
  G1 Y{initial_y_horizontal} E{2 * extrude_per_mm} #this 2* could be updated to a variable 

  # Printing the Zig zag pattern
  G91 #Relative Coordinates
  SET_GCODE_VARIABLE MACRO=_print_Horizontal VARIABLE=line_number VALUE={line_number}
  SET_GCODE_VARIABLE MACRO=_print_Horizontal VARIABLE=line_spacing VALUE={line_spacing}
  SET_GCODE_VARIABLE MACRO=_print_Horizontal VARIABLE=line_height VALUE={line_height}
  SET_GCODE_VARIABLE MACRO=_print_Horizontal VARIABLE=line_top VALUE={line_top}
  SET_GCODE_VARIABLE MACRO=_print_Horizontal VARIABLE=extrude_per_mm VALUE={extrude_per_mm}
  _print_Horizontal

  # Raising the nozzle
  G1 Z2 E-0.1

  #
  # Vertical Print in tool 0
  #
  G90 # Absolute Coordinates for all axes
  M83 # Relative Coordinates for extruder only
  
  # Going to the start of the "brim"
  G1 X{initial_x_vertical - 2} Y{initial_y_vertical_2} E-0.1 F12000
  
  # Lowering the Nozzle
  G1 Z0.2 E0.5 F2000

  # Making the U turn of the "brim"
  G1 Y{initial_y_vertical} E{(initial_x_horizontal_2 - initial_x_horizontal) * extrude_per_mm} F3000
  
  # Going to start of calibration
  G1 X{initial_x_vertical} E{2 * extrude_per_mm} #this 2* could be updated to a variable

  # Printing the Zig zag pattern
  G91 #Relative Coordinates
  SET_GCODE_VARIABLE MACRO=_print_Vertical VARIABLE=line_number VALUE={line_number}
  SET_GCODE_VARIABLE MACRO=_print_Vertical VARIABLE=line_spacing VALUE={line_spacing}
  SET_GCODE_VARIABLE MACRO=_print_Vertical VARIABLE=line_height VALUE={line_height}
  SET_GCODE_VARIABLE MACRO=_print_Vertical VARIABLE=line_top VALUE={line_top}
  SET_GCODE_VARIABLE MACRO=_print_Vertical VARIABLE=extrude_per_mm VALUE={extrude_per_mm}
  _print_Vertical

  # Parking the nozzle
  G91 #Relative Coordinates
  SET_GCODE_VARIABLE MACRO=_park_Nozzle VARIABLE=x_home_position VALUE={printer.configfile.config["stepper_x"].position_min|int + 5}
  _park_Nozzle

  #
  # Changing Tool
  #
  T1
  
  {% if prime %}
    _prime_Nozzle 
  {% else %}
    M83 # Relative Coordinates for extruder only
    G1 E0.1
  {% endif %}
  
  #
  # Horizontal Print in tool 1
  #
  G90 # Absolute Coordinates for all axes
  M83 # Relative Coordinates for extruder only
  
  # Going to the start of the "brim"
  G1 X{initial_x_horizontal} Y{initial_y_horizontal_2 + 2} E-0.1 F12000

  # Lowering the nozzle
  G1 Z0.2 E0.5 F2000

  # Making the U turn of the "brim"
  G1 X{initial_x_horizontal_2} E{(initial_x_horizontal_2 - initial_x_horizontal) * extrude_per_mm} F3000
  
  # Going to start of calibration
  G1 Y{initial_y_horizontal_2} E{2 * extrude_per_mm} #this 2* could be updated to a variable

  # Printing the Zig zag pattern
  G91 #Relative Coordinates
  SET_GCODE_VARIABLE MACRO=_print_Horizontal VARIABLE=line_number VALUE={line_number}
  SET_GCODE_VARIABLE MACRO=_print_Horizontal VARIABLE=line_spacing VALUE=-{line_spacing_2}
  SET_GCODE_VARIABLE MACRO=_print_Horizontal VARIABLE=line_height VALUE=-{line_height}
  SET_GCODE_VARIABLE MACRO=_print_Horizontal VARIABLE=line_top VALUE=-{line_top}
  SET_GCODE_VARIABLE MACRO=_print_Horizontal VARIABLE=extrude_per_mm VALUE={extrude_per_mm}
  _print_Horizontal

  # Raising the nozzle
  G1 Z2 E-0.1

  #
  # Vertical Print in tool 1
  #
  G90 # Absolute Coordinates for all axes
  M83 # Relative Coordinates for extruder only
  
  # Going to the start of the "brim"
  G1 X{initial_x_vertical_2 + 2} Y{initial_y_vertical} E-0.1 F12000
  
  # Lowering the Nozzle
  G1 Z0.2 E0.5 F2000

  # Making the U turn of the "brim"
  G1 Y{initial_y_vertical_2} E{(initial_x_horizontal_2 - initial_x_horizontal) * extrude_per_mm} F3000
  
  # Going to start of calibration
  G1 X{initial_x_vertical_2} E{2 * extrude_per_mm} #this 2* could be updated to a variable

  # Printing the Zig zag pattern
  G91 #Relative Coordinates
  SET_GCODE_VARIABLE MACRO=_print_Vertical VARIABLE=line_number VALUE={line_number}
  SET_GCODE_VARIABLE MACRO=_print_Vertical VARIABLE=line_spacing VALUE=-{line_spacing_2}
  SET_GCODE_VARIABLE MACRO=_print_Vertical VARIABLE=line_height VALUE=-{line_height}
  SET_GCODE_VARIABLE MACRO=_print_Vertical VARIABLE=line_top VALUE=-{line_top}
  SET_GCODE_VARIABLE MACRO=_print_Vertical VARIABLE=extrude_per_mm VALUE={extrude_per_mm}
  _print_Vertical

  # Parking the nozzle
  G90 # Absolute Coordinates
  SET_GCODE_VARIABLE MACRO=_park_Nozzle VARIABLE=x_home_position VALUE={printer.configfile.config["dual_carriage"].position_max|int - 5}
  _park_Nozzle
  G1 Y150 # So the user can see the lines properly

  #
  # Changing Tool
  #
  T0
  
  _select_X_Line

[delayed_gcode _wait_For_User_X]
gcode:
  M118 Wait for user X
  {% set offset = printer['gcode_macro _select_X_Line'].line_selected %}
  {% if not offset %}                                                      # If the line still hasn't been selected, loop this delayed g_code
    UPDATE_DELAYED_GCODE ID=_wait_For_User_X duration=2
  {% else %}                                                               # When a Line has been selected, advance to the selection of the vertical line
    {% if offset < 20 %}                                                     # If the selected line is the middle one, selected_line value is set to 20, but the offset is 0. Setting it to 0 would keep this code on a loop...
      SAVE_VARIABLE VARIABLE=tool_2_x_offset VALUE={offset}                # When a line is selected, a macro changing the line_selected variable is called.
    #{% else %}
      #SAVE_VARIABLE VARIABLE=tool_2_x_offset VALUE={0|float}
    {% endif %}
    SET_GCODE_VARIABLE MACRO=_select_X_Line VARIABLE=line_selected VALUE=0

    UPDATE_DELAYED_GCODE id=_wait_For_User_Y duration=2
    SET_GCODE_VARIABLE MACRO=_select_Y_Line VARIABLE=line_selected VALUE=0
    SET_GCODE_VARIABLE MACRO=_select_Y_Line VARIABLE=detailed VALUE=False
    _select_Y_Line
  {% endif %}

[delayed_gcode _wait_For_User_Y]
gcode:
  M118 Wait for user Y
  {% set offset = printer['gcode_macro _select_Y_Line'].line_selected %}
  {% if not offset %}                                                        # If the line still hasn't been selected, loop this delayed g_code
    UPDATE_DELAYED_GCODE ID=_wait_For_User_Y duration=2
  {% else %}
    {% if offset < 20 %}                                                     # If the selected line is the middle one, selected_line value is set to 20, but the offset is 0. Setting it to 0 would keep this code on a loop...
      SAVE_VARIABLE VARIABLE=tool_2_y_offset VALUE={offset}                  # When a line is selected, a macro changing the line_selected variable is called.
    #{% else %}
      #SAVE_VARIABLE VARIABLE=tool_2_y_offset VALUE={0|float}
    {% endif %}
    SET_GCODE_VARIABLE MACRO=_select_Y_Line VARIABLE=line_selected VALUE=0
    
    _XY_Calibration_Print_detailed
  {% endif %}

[gcode_macro _XY_Calibration_Print_detailed]
gcode:

  {% set line_number = printer["gcode_macro XY_Calibration_Print"].line_number %}
  {% set line_spacing = printer["gcode_macro XY_Calibration_Print"].line_spacing %}
  {% set line_height = printer["gcode_macro XY_Calibration_Print"].line_height %}
  {% set line_top = printer["gcode_macro XY_Calibration_Print"].line_top %}
  {% set extrude_per_mm = printer["gcode_macro XY_Calibration_Print"].extrude_per_mm %}
  {% set line_spacing_2_detailed = printer["gcode_macro XY_Calibration_Print"].line_spacing_2_detailed %}
  {% set initial_detailed_x_horizontal = printer["gcode_macro XY_Calibration_Print"].initial_detailed_x_horizontal %}
  {% set initial_detailed_y_horizontal = printer["gcode_macro XY_Calibration_Print"].initial_detailed_y_horizontal %}
  {% set initial_detailed_x_horizontal_2 = printer["gcode_macro XY_Calibration_Print"].initial_detailed_x_horizontal_2 %} 
  {% set initial_detailed_y_horizontal_2 = printer["gcode_macro XY_Calibration_Print"].initial_detailed_y_horizontal_2 %} 
  {% set initial_detailed_x_vertical = printer["gcode_macro XY_Calibration_Print"].initial_detailed_x_vertical %} 
  {% set initial_detailed_y_vertical = printer["gcode_macro XY_Calibration_Print"].initial_detailed_y_vertical %} 
  {% set initial_detailed_x_vertical_2 = printer["gcode_macro XY_Calibration_Print"].initial_detailed_x_vertical_2 %} 
  {% set initial_detailed_y_vertical_2 = printer["gcode_macro XY_Calibration_Print"].initial_detailed_y_vertical_2 %} 

  SET_GCODE_VARIABLE MACRO=_XY_Calibration VARIABLE=prime VALUE=True
  SET_GCODE_VARIABLE MACRO=_XY_Calibration VARIABLE=line_number VALUE={line_number} #TODO ITS NOT SETTING THESE VALUES
  SET_GCODE_VARIABLE MACRO=_XY_Calibration VARIABLE=line_spacing VALUE={line_spacing}
  SET_GCODE_VARIABLE MACRO=_XY_Calibration VARIABLE=line_height VALUE={line_height}
  SET_GCODE_VARIABLE MACRO=_XY_Calibration VARIABLE=line_top VALUE={line_top}
  SET_GCODE_VARIABLE MACRO=_XY_Calibration VARIABLE=extrude_per_mm VALUE={extrude_per_mm}
  SET_GCODE_VARIABLE MACRO=_XY_Calibration VARIABLE=line_spacing_2 VALUE={line_spacing_2_detailed}
  SET_GCODE_VARIABLE MACRO=_XY_Calibration VARIABLE=initial_x_horizontal VALUE={initial_detailed_x_horizontal}
  SET_GCODE_VARIABLE MACRO=_XY_Calibration VARIABLE=initial_y_horizontal VALUE={initial_detailed_y_horizontal}
  SET_GCODE_VARIABLE MACRO=_XY_Calibration VARIABLE=initial_x_horizontal_2 VALUE={initial_detailed_x_horizontal_2}
  SET_GCODE_VARIABLE MACRO=_XY_Calibration VARIABLE=initial_y_horizontal_2 VALUE={initial_detailed_y_horizontal_2}
  SET_GCODE_VARIABLE MACRO=_XY_Calibration VARIABLE=initial_x_vertical VALUE={initial_detailed_x_vertical}
  SET_GCODE_VARIABLE MACRO=_XY_Calibration VARIABLE=initial_y_vertical VALUE={initial_detailed_y_vertical}
  SET_GCODE_VARIABLE MACRO=_XY_Calibration VARIABLE=initial_x_vertical_2 VALUE={initial_detailed_x_vertical_2}
  SET_GCODE_VARIABLE MACRO=_XY_Calibration VARIABLE=initial_y_vertical_2 VALUE={initial_detailed_y_vertical_2}

  #SET_GCODE_VARIABLE MACRO=_XY_Calibration VARIABLE=prime VALUE=True
  #SET_GCODE_VARIABLE MACRO=_XY_Calibration VARIABLE=line_number VALUE={printer["gcode_macro XY_Calibration_Print"].line_number} #TODO ITS NOT SETTING THESE VALUES
  #SET_GCODE_VARIABLE MACRO=_XY_Calibration VARIABLE=line_spacing VALUE={printer["gcode_macro XY_Calibration_Print"].line_spacing}
  #SET_GCODE_VARIABLE MACRO=_XY_Calibration VARIABLE=line_height VALUE={printer["gcode_macro XY_Calibration_Print"].line_height}
  #SET_GCODE_VARIABLE MACRO=_XY_Calibration VARIABLE=line_top VALUE={printer["gcode_macro XY_Calibration_Print"].line_top}
  #SET_GCODE_VARIABLE MACRO=_XY_Calibration VARIABLE=extrude_per_mm VALUE={printer["gcode_macro XY_Calibration_Print"].extrude_per_mm}
  #SET_GCODE_VARIABLE MACRO=_XY_Calibration VARIABLE=line_spacing_2 VALUE={printer["gcode_macro XY_Calibration_Print"].line_spacing_2_detailed}
  #SET_GCODE_VARIABLE MACRO=_XY_Calibration VARIABLE=initial_x_horizontal VALUE={printer["gcode_macro XY_Calibration_Print"].initial_detailed_x_horizontal}
  #SET_GCODE_VARIABLE MACRO=_XY_Calibration VARIABLE=initial_y_horizontal VALUE={printer["gcode_macro XY_Calibration_Print"].initial_detailed_y_horizontal}
  #SET_GCODE_VARIABLE MACRO=_XY_Calibration VARIABLE=initial_x_horizontal_2 VALUE={printer["gcode_macro XY_Calibration_Print"].initial_detailed_x_horizontal_2}
  #SET_GCODE_VARIABLE MACRO=_XY_Calibration VARIABLE=initial_y_horizontal_2 VALUE={printer["gcode_macro XY_Calibration_Print"].initial_detailed_y_horizontal_2}
  #SET_GCODE_VARIABLE MACRO=_XY_Calibration VARIABLE=initial_x_vertical VALUE={printer["gcode_macro XY_Calibration_Print"].initial_detailed_x_vertical}
  #SET_GCODE_VARIABLE MACRO=_XY_Calibration VARIABLE=initial_y_vertical VALUE={printer["gcode_macro XY_Calibration_Print"].initial_detailed_y_vertical}
  #SET_GCODE_VARIABLE MACRO=_XY_Calibration VARIABLE=initial_x_vertical_2 VALUE={printer["gcode_macro XY_Calibration_Print"].initial_detailed_x_vertical_2}
  #SET_GCODE_VARIABLE MACRO=_XY_Calibration VARIABLE=initial_y_vertical_2 VALUE={printer["gcode_macro XY_Calibration_Print"].initial_detailed_y_vertical_2}

  #M118 Before Print Detailed line number:{printer["gcode_macro XY_Calibration_Print"].line_number}
  #M118 Before Print Detailed line spacing:{printer["gcode_macro XY_Calibration_Print"].line_spacing}
  #M118 Before Print Detailed line height:{printer["gcode_macro XY_Calibration_Print"].line_height}
  #M118 Before Print Detailed line top:{printer["gcode_macro XY_Calibration_Print"].line_top}
  #M118 Before Print Detailed extrude per mm:{printer["gcode_macro XY_Calibration_Print"].extrude_per_mm}
  #M118 Before Print Detailed line spacing 2:{printer["gcode_macro XY_Calibration_Print"].line_spacing_2}
  #M118 Before Print Detailed initial x horizontal:{printer["gcode_macro XY_Calibration_Print"].initial_x_horizontal}
  #M118 Before Print Detailed initial y horizontal:{printer["gcode_macro XY_Calibration_Print"].initial_y_horizontal}
  #M118 Before Print Detailed initial x horizontal 2:{printer["gcode_macro XY_Calibration_Print"].initial_x_horizontal_2} 
  #M118 Before Print Detailed initial y horizontal 2:{printer["gcode_macro XY_Calibration_Print"].initial_y_horizontal_2} 
  #M118 Before Print Detailed initial x vertical:{printer["gcode_macro XY_Calibration_Print"].initial_x_vertical} 
  #M118 Before Print Detailed initial y vertical:{printer["gcode_macro XY_Calibration_Print"].initial_y_vertical} 
  #M118 Before Print Detailed initial x vertical 2:{printer["gcode_macro XY_Calibration_Print"].initial_x_vertical_2} 
  #M118 Before Print Detailed initial y vertical 2:{printer["gcode_macro XY_Calibration_Print"].initial_y_vertical_2} 
  
  RESPOND TYPE=command MSG="action:prompt_begin Printing Detailed Calibration Print"
  RESPOND TYPE=command MSG="action:prompt_text When print ends, select which horizontal line is the most aligned."
  RESPOND TYPE=command MSG="action:prompt_footer_button OK|RESPOND TYPE=command MSG=action:prompt_end|info"
  RESPOND TYPE=command MSG="action:prompt_show"

  SET_GCODE_VARIABLE MACRO=_select_X_Line VARIABLE=line_selected VALUE=0
  SET_GCODE_VARIABLE MACRO=_select_X_Line VARIABLE=detailed VALUE=True
  UPDATE_DELAYED_GCODE ID=_wait_For_User_X_Detailed duration=70

  _XY_Calibration

[delayed_gcode _wait_For_User_X_Detailed]
gcode:
  M118 Wait for user X detailed
  {% set offset = printer['gcode_macro _select_X_Line'].line_selected %}
  {% if not offset %} #If the line still hasn't been selected, loop this delayed g_code
    UPDATE_DELAYED_GCODE ID=_wait_For_User_X_Detailed duration=2
  {% else %}                                                               # When a Line has been selected, advance to the selection of the vertical line
    {% if offset < 20 %}                                                     # If the selected line is the middle one, selected_line value is set to 20, but the offset is 0. Setting it to 0 would keep this code on a loop...
      SAVE_VARIABLE VARIABLE=tool_2_x_offset VALUE={offset}                # When a line is selected, a macro changing the line_selected variable is called.
    #{% else %}
      #SAVE_VARIABLE VARIABLE=tool_2_x_offset VALUE={0|float}
    {% endif %}
    SET_GCODE_VARIABLE MACRO=_select_X_Line VARIABLE=line_selected VALUE=0
    UPDATE_DELAYED_GCODE ID=_wait_For_User_X_Detailed duration=0

    UPDATE_DELAYED_GCODE id=_wait_For_User_Y_Detailed duration=3
    SET_GCODE_VARIABLE MACRO=_select_Y_Line VARIABLE=line_selected VALUE=0
    SET_GCODE_VARIABLE MACRO=_select_Y_Line VARIABLE=detailed VALUE=True
    _select_Y_Line
  {% endif %}

[delayed_gcode _wait_For_User_Y_Detailed]
gcode:
  M118 Wait for user Y detailed
  {% set offset = printer['gcode_macro _select_Y_Line'].line_selected %}
  {% if not offset %} #If the line still hasn't been selected, loop this delayed g_code
    UPDATE_DELAYED_GCODE ID=_wait_For_User_Y_Detailed duration=2
  {% else %}
    {% if offset < 20 %}   
      SAVE_VARIABLE VARIABLE=tool_2_y_offset VALUE={offset}    # When a line is selected, a macro changing the line_selected variable is called.
    #{% else %}
      #SAVE_VARIABLE VARIABLE=tool_2_y_offset VALUE={0|float}
    {% endif %}
    SET_GCODE_VARIABLE MACRO=_select_Y_Line VARIABLE=line_selected VALUE=0
    UPDATE_DELAYED_GCODE ID=_wait_For_User_Y_Detailed duration=0
    
    M118 XY Calibration Finished
  {% endif %}

[gcode_macro XY_Calibration_Print]
variable_printing_feedrate : 50
variable_extrude_per_mm : 0.035
variable_line_number : 10 # Must be an even number. Number of vertical calibration lines excluding center line.
variable_line_height : 20 # Line height
variable_line_top : 1     # Length of line top
variable_line_spacing : 8 # Distance between lines
variable_line_spacing_2 : 9 
variable_line_spacing_2_detailed : 8.1
variable_deviation : 0 # line_spacing_2 - line_spacing
variable_deviation_detailed : 0 # line_spacing_2_detailed - line_spacing
variable_initial_x_horizontal : 230
variable_initial_y_horizontal : 30
variable_initial_x_horizontal_2 : 0 # initial_x_horizontal + ((line_spacing + line_top) * (line_number + 1)) + (line_number/2 * deviation) + line_spacing_2
variable_initial_y_horizontal_2 : 0 # initial_y_horizontal + (line_height * 2) + 2 
variable_initial_x_vertical : 0 # initial_x_horizontal_2 + 20 
variable_initial_y_vertical : 0 # initial_y_horizontal
variable_initial_x_vertical_2 : 0 # initial_x_vertical + (line_height * 2) + 2
variable_initial_y_vertical_2 : 0 # initial_y_vertical + ((line_spacing + line_top) * (line_number + 1)) + (line_number/2 * deviation) + line_spacing_2
variable_initial_detailed_x_horizontal : 0 # initial_x_horizontal
variable_initial_detailed_y_horizontal : 0 # initial_y_horizontal_2 + line_height
variable_initial_detailed_x_horizontal_2 : 0 # initial_detailed_x_horizontal + ((line_spacing + line_top) * (line_number + 1)) + (line_number/2 * deviation_detailed) + line_spacing_2_detailed
variable_initial_detailed_y_horizontal_2 : 0 # initial_detailed_y_horizontal + (line_height * 2) + 2
variable_initial_detailed_x_vertical : 0 # initial_x_vertical_2 + line_height
variable_initial_detailed_y_vertical : 0 # initial_y_horizontal
variable_initial_detailed_x_vertical_2 : 0 # initial_detailed_x_vertical + (line_height * 2) + 2
variable_initial_detailed_y_vertical_2 : 0 # initial_detailed_y_vertical + ((line_spacing + line_top) * (line_number + 1)) + (line_number/2 * deviation_detailed) + line_spacing_2_detailed
gcode:
  #SAVE_VARIABLE VARIABLE=tool_2_x_offset VALUE={0|float}    # Reseting Values
  #SAVE_VARIABLE VARIABLE=tool_2_y_offset VALUE={0|float}    # Reseting Values

  {% set deviation = line_spacing_2 - line_spacing %}

  {% set initial_x_horizontal_2 = initial_x_horizontal + ((line_spacing + line_top) * (line_number + 1)) + (line_number/2 * deviation) + line_spacing_2 %}
  {% set initial_y_horizontal_2 = initial_y_horizontal + (line_height * 2) + 2 %}

  {% set initial_x_vertical = initial_x_horizontal_2 + 20 %}
  {% set initial_y_vertical = initial_y_horizontal %}
  {% set initial_x_vertical_2 = initial_x_vertical + (line_height * 2) + 2 %}
  {% set initial_y_vertical_2 = initial_y_vertical + ((line_spacing + line_top) * (line_number + 1)) + (line_number/2 * deviation) + line_spacing_2 %}

  {% set deviation_detailed = line_spacing_2_detailed - line_spacing %}

  {% set initial_detailed_x_horizontal = initial_x_horizontal %}
  {% set initial_detailed_y_horizontal = initial_y_horizontal_2 + line_height %}
  {% set initial_detailed_x_horizontal_2 = initial_detailed_x_horizontal + ((line_spacing + line_top) * (line_number + 1)) + (line_number/2 * deviation_detailed) + line_spacing_2_detailed %}
  {% set initial_detailed_y_horizontal_2 = initial_detailed_y_horizontal + (line_height * 2) + 2 %}

  {% set initial_detailed_x_vertical = initial_x_vertical_2 + line_height %}
  {% set initial_detailed_y_vertical = initial_y_horizontal %}
  {% set initial_detailed_x_vertical_2 = initial_detailed_x_vertical + (line_height * 2) + 2 %}
  {% set initial_detailed_y_vertical_2 = initial_detailed_y_vertical + ((line_spacing + line_top) * (line_number + 1)) + (line_number/2 * deviation_detailed) + line_spacing_2_detailed %}

  RESPOND TYPE=command MSG="action:prompt_begin XY Calibration Print"
  RESPOND TYPE=command MSG="action:prompt_text Hotends heating to begin calibration print."
  RESPOND TYPE=command MSG="action:prompt_show"

  {% set psv = printer.save_variables.variables %}
  _SET_HEATER_TEMPERATURE HEATER=extruder TARGET={psv.filament_temp_1}
  _SET_HEATER_TEMPERATURE HEATER=extruder1 TARGET={psv.filament_temp_2}
  g28 #go to min positions
  #TEMPERATURE_WAIT SENSOR=extruder MINIMUM={psv.filament_temp_1}
  #TEMPERATURE_WAIT SENSOR=extruder1 MINIMUM={psv.filament_temp_2}

  SET_GCODE_VARIABLE MACRO=XY_Calibration_Print VARIABLE=initial_x_horizontal_2 VALUE={initial_x_horizontal_2}
  SET_GCODE_VARIABLE MACRO=XY_Calibration_Print VARIABLE=initial_y_horizontal_2 VALUE={initial_y_horizontal_2}
  SET_GCODE_VARIABLE MACRO=XY_Calibration_Print VARIABLE=initial_x_vertical VALUE={initial_x_vertical}
  SET_GCODE_VARIABLE MACRO=XY_Calibration_Print VARIABLE=initial_y_vertical VALUE={initial_y_vertical}
  SET_GCODE_VARIABLE MACRO=XY_Calibration_Print VARIABLE=initial_x_vertical_2 VALUE={initial_x_vertical_2}
  SET_GCODE_VARIABLE MACRO=XY_Calibration_Print VARIABLE=initial_y_vertical_2 VALUE={initial_y_vertical_2}

  SET_GCODE_VARIABLE MACRO=XY_Calibration_Print VARIABLE=initial_detailed_x_horizontal VALUE={initial_detailed_x_horizontal}
  SET_GCODE_VARIABLE MACRO=XY_Calibration_Print VARIABLE=initial_detailed_y_horizontal VALUE={initial_detailed_y_horizontal}
  SET_GCODE_VARIABLE MACRO=XY_Calibration_Print VARIABLE=initial_detailed_x_horizontal_2 VALUE={initial_detailed_x_horizontal_2}
  SET_GCODE_VARIABLE MACRO=XY_Calibration_Print VARIABLE=initial_detailed_y_horizontal_2 VALUE={initial_detailed_y_horizontal_2}
  SET_GCODE_VARIABLE MACRO=XY_Calibration_Print VARIABLE=initial_detailed_x_vertical VALUE={initial_detailed_x_vertical}
  SET_GCODE_VARIABLE MACRO=XY_Calibration_Print VARIABLE=initial_detailed_y_vertical VALUE={initial_detailed_y_vertical}
  SET_GCODE_VARIABLE MACRO=XY_Calibration_Print VARIABLE=initial_detailed_x_vertical_2 VALUE={initial_detailed_x_vertical_2}
  SET_GCODE_VARIABLE MACRO=XY_Calibration_Print VARIABLE=initial_detailed_y_vertical_2 VALUE={initial_detailed_y_vertical_2}

  SET_GCODE_VARIABLE MACRO=_XY_Calibration VARIABLE=prime VALUE=True
  SET_GCODE_VARIABLE MACRO=_XY_Calibration VARIABLE=line_number VALUE={line_number}
  SET_GCODE_VARIABLE MACRO=_XY_Calibration VARIABLE=line_spacing VALUE={line_spacing}
  SET_GCODE_VARIABLE MACRO=_XY_Calibration VARIABLE=line_height VALUE={line_height}
  SET_GCODE_VARIABLE MACRO=_XY_Calibration VARIABLE=line_top VALUE={line_top}
  SET_GCODE_VARIABLE MACRO=_XY_Calibration VARIABLE=extrude_per_mm VALUE={extrude_per_mm}
  SET_GCODE_VARIABLE MACRO=_XY_Calibration VARIABLE=line_spacing_2 VALUE={line_spacing_2}
  SET_GCODE_VARIABLE MACRO=_XY_Calibration VARIABLE=initial_x_horizontal VALUE={initial_x_horizontal}
  SET_GCODE_VARIABLE MACRO=_XY_Calibration VARIABLE=initial_y_horizontal VALUE={initial_y_horizontal}
  SET_GCODE_VARIABLE MACRO=_XY_Calibration VARIABLE=initial_x_horizontal_2 VALUE={initial_x_horizontal_2}
  SET_GCODE_VARIABLE MACRO=_XY_Calibration VARIABLE=initial_y_horizontal_2 VALUE={initial_y_horizontal_2}
  SET_GCODE_VARIABLE MACRO=_XY_Calibration VARIABLE=initial_x_vertical VALUE={initial_x_vertical}
  SET_GCODE_VARIABLE MACRO=_XY_Calibration VARIABLE=initial_y_vertical VALUE={initial_y_vertical}
  SET_GCODE_VARIABLE MACRO=_XY_Calibration VARIABLE=initial_x_vertical_2 VALUE={initial_x_vertical_2}
  SET_GCODE_VARIABLE MACRO=_XY_Calibration VARIABLE=initial_y_vertical_2 VALUE={initial_y_vertical_2}

  RESPOND TYPE=command MSG="action:prompt_begin Printing Calibrating Print"
  RESPOND TYPE=command MSG="action:prompt_text Wait for print to end and then select which horizontal line is the most aligned."
  RESPOND TYPE=command MSG="action:prompt_footer_button OK|RESPOND TYPE=command MSG=action:prompt_end|info"
  RESPOND TYPE=command MSG="action:prompt_show"

  M118 line number:{line_number}
  M118 line height:{line_height}
  M118 line top:{line_top}
  M118 line spacing:{line_spacing}
  M118 line spacing 2:{line_spacing_2}
  M118 Detailed line spacing 2 :{line_spacing_2_detailed}
  M118 deviation:{deviation}
  M118 Detailed deviation:{deviation_detailed}
  M118 initial x horizontal:{initial_x_horizontal}
  M118 initial y horizontal:{initial_y_horizontal}
  M118 initial x horizontal 2:{initial_x_horizontal_2} 
  M118 initial y horizontal 2:{initial_y_horizontal_2} 
  M118 initial x vertical:{initial_x_vertical} 
  M118 initial y vertical:{initial_y_vertical} 
  M118 initial x vertical 2:{initial_x_vertical_2} 
  M118 initial y vertical 2:{initial_y_vertical_2} 
  M118 Detailed initial x horizontal:{initial_detailed_x_horizontal}
  M118 Detailed initial y horizontal:{initial_detailed_y_horizontal}
  M118 Detailed initial x horizontal 2:{initial_detailed_x_horizontal_2} 
  M118 Detailed initial y horizontal 2:{initial_detailed_y_horizontal_2} 
  M118 Detailed initial x vertical:{initial_detailed_x_vertical} 
  M118 Detailed initial y vertical:{initial_detailed_y_vertical} 
  M118 Detailed initial x vertical 2:{initial_detailed_x_vertical_2} 
  M118 Detailed initial y vertical 2:{initial_detailed_y_vertical_2} 
    
  #SET_GCODE_VARIABLE MACRO=_select_X_Line VARIABLE=line_selected VALUE=0
  #SET_GCODE_VARIABLE MACRO=_select_Y_Line VARIABLE=line_selected VALUE=0
  #SET_GCODE_VARIABLE MACRO=_select_X_Line VARIABLE=detailed VALUE=False
  #SET_GCODE_VARIABLE MACRO=_select_Y_Line VARIABLE=detailed VALUE=False
  #UPDATE_DELAYED_GCODE ID=_wait_For_User_X duration=70

  #_XY_Calibration

  #G91 # Relative Coordinates

[gcode_macro print_shit]
variable_prime: False
variable_line_number: 0
variable_line_spacing: 0
variable_line_height: 0 
variable_line_top: 0
variable_extrude_per_mm: 0
variable_line_spacing_2: 0
variable_initial_x_horizontal: 0
variable_initial_y_horizontal: 50
variable_initial_x_horizontal_2: 50
variable_initial_y_horizontal_2: 0
variable_initial_x_vertical: 0
variable_initial_y_vertical: 0
variable_initial_x_vertical_2: 0
variable_initial_y_vertical_2: 0
gcode:
  UPDATE_DELAYED_GCODE ID=_wait_For_User_X duration=1
  SET_GCODE_VARIABLE MACRO=_select_X_Line VARIABLE=detailed VALUE=False
  SET_GCODE_VARIABLE MACRO=_select_X_Line VARIABLE=line_selected VALUE=0
  _select_X_Line


[gcode_macro _select_X_Line]
variable_line_selected: 0
variable_detailed: False
gcode:
  RESPOND TYPE=command MSG="action:prompt_begin Select Best Matching Line"
  RESPOND TYPE=command MSG="action:prompt_text When print ends, select which horizontal line is the most aligned."
  RESPOND TYPE=command MSG="action:prompt_button_group_start"
  RESPOND TYPE=command MSG="action:prompt_button 1|_horizontal_1|info"
  RESPOND TYPE=command MSG="action:prompt_button 2|_horizontal_2|info"
  RESPOND TYPE=command MSG="action:prompt_button 3|_horizontal_3|info"
  RESPOND TYPE=command MSG="action:prompt_button 4|_horizontal_4|info"
  RESPOND TYPE=command MSG="action:prompt_button_group_end"
  RESPOND TYPE=command MSG="action:prompt_button_group_start"
  RESPOND TYPE=command MSG="action:prompt_button 5|_horizontal_5|info"
  RESPOND TYPE=command MSG="action:prompt_button 6|_horizontal_6|info"
  RESPOND TYPE=command MSG="action:prompt_button 7|_horizontal_7|info"
  RESPOND TYPE=command MSG="action:prompt_button 8|_horizontal_8|info"
  RESPOND TYPE=command MSG="action:prompt_button_group_end"
  RESPOND TYPE=command MSG="action:prompt_button_group_start"
  RESPOND TYPE=command MSG="action:prompt_button 9|_horizontal_9|info"
  RESPOND TYPE=command MSG="action:prompt_button 10|_horizontal_10|info"
  RESPOND TYPE=command MSG="action:prompt_button 11|_horizontal_11|info"
  RESPOND TYPE=command MSG="action:prompt_button_group_end"
  RESPOND TYPE=command MSG="action:prompt_show"

[gcode_macro _select_Y_Line]
variable_line_selected: 0
variable_detailed: False
gcode:
  RESPOND TYPE=command MSG="action:prompt_begin Select Best Matching Line"
  RESPOND TYPE=command MSG="action:prompt_text When print ends, select which vertical line is the most aligned."
  RESPOND TYPE=command MSG="action:prompt_button_group_start"
  RESPOND TYPE=command MSG="action:prompt_button 1|_vertical_1|info"
  RESPOND TYPE=command MSG="action:prompt_button 2|_vertical_2|info"
  RESPOND TYPE=command MSG="action:prompt_button 3|_vertical_3|info"
  RESPOND TYPE=command MSG="action:prompt_button 4|_vertical_4|info"
  RESPOND TYPE=command MSG="action:prompt_button_group_end"
  RESPOND TYPE=command MSG="action:prompt_button_group_start"
  RESPOND TYPE=command MSG="action:prompt_button 5|_vertical_5|info"
  RESPOND TYPE=command MSG="action:prompt_button 6|_vertical_6|info"
  RESPOND TYPE=command MSG="action:prompt_button 7|_vertical_7|info"
  RESPOND TYPE=command MSG="action:prompt_button 8|_vertical_8|info"
  RESPOND TYPE=command MSG="action:prompt_button_group_end"
  RESPOND TYPE=command MSG="action:prompt_button_group_start"
  RESPOND TYPE=command MSG="action:prompt_button 9|_vertical_9|info"
  RESPOND TYPE=command MSG="action:prompt_button 10|_vertical_10|info"
  RESPOND TYPE=command MSG="action:prompt_button 11|_vertical_11|info"
  RESPOND TYPE=command MSG="action:prompt_button_group_end"
  RESPOND TYPE=command MSG="action:prompt_show"

###################################################################################################################
#
#  Macros for selecting the best matching lines
#
###################################################################################################################


[gcode_macro _horizontal_1] # It would be better to pass an argument than have a ton of similar functions, but it is what it is.
gcode:
  {% if not printer['gcode_macro _select_X_Line'].detailed %}
    SET_GCODE_VARIABLE MACRO=_select_X_Line VARIABLE=line_selected VALUE={printer.save_variables.variables.tool_2_x_offset|float - 5|float}
  {% else %}
    SET_GCODE_VARIABLE MACRO=_select_X_Line VARIABLE=line_selected VALUE={printer.save_variables.variables.tool_2_x_offset|float - 0.5|float}
  {% endif %}
  RESPOND TYPE=command MSG="action:prompt_end"
    
[gcode_macro _horizontal_2] 
gcode:
  {% if not printer['gcode_macro _select_X_Line'].detailed %}
    SET_GCODE_VARIABLE MACRO=_select_X_Line VARIABLE=line_selected VALUE={printer.save_variables.variables.tool_2_x_offset|float - 4|float}
  {% else %}
    SET_GCODE_VARIABLE MACRO=_select_X_Line VARIABLE=line_selected VALUE={printer.save_variables.variables.tool_2_x_offset|float - 0.4|float}
  {% endif %}
  RESPOND TYPE=command MSG="action:prompt_end"

[gcode_macro _horizontal_3]
gcode:
    {% if not printer['gcode_macro _select_X_Line'].detailed %}
    SET_GCODE_VARIABLE MACRO=_select_X_Line VARIABLE=line_selected VALUE={printer.save_variables.variables.tool_2_x_offset|float - 3|float}
  {% else %}
    SET_GCODE_VARIABLE MACRO=_select_X_Line VARIABLE=line_selected VALUE={printer.save_variables.variables.tool_2_x_offset|float - 0.3|float}
  {% endif %}
  RESPOND TYPE=command MSG="action:prompt_end"

[gcode_macro _horizontal_4]
gcode:
    {% if not printer['gcode_macro _select_X_Line'].detailed %}
    SET_GCODE_VARIABLE MACRO=_select_X_Line VARIABLE=line_selected VALUE={printer.save_variables.variables.tool_2_x_offset|float - 2|float}
  {% else %}
    SET_GCODE_VARIABLE MACRO=_select_X_Line VARIABLE=line_selected VALUE={printer.save_variables.variables.tool_2_x_offset|float - 0.2|float}
  {% endif %}
  RESPOND TYPE=command MSG="action:prompt_end"

[gcode_macro _horizontal_5]
gcode:
    {% if not printer['gcode_macro _select_X_Line'].detailed %}
    SET_GCODE_VARIABLE MACRO=_select_X_Line VARIABLE=line_selected VALUE={printer.save_variables.variables.tool_2_x_offset|float - 1|float}
  {% else %}
    SET_GCODE_VARIABLE MACRO=_select_X_Line VARIABLE=line_selected VALUE={printer.save_variables.variables.tool_2_x_offset|float - 0.1|float}
  {% endif %}
  RESPOND TYPE=command MSG="action:prompt_end"

[gcode_macro _horizontal_6]
gcode:
  {% if not printer['gcode_macro _select_X_Line'].detailed %}
    SET_GCODE_VARIABLE MACRO=_select_X_Line VARIABLE=line_selected VALUE={20|float}
  {% else %}
    SET_GCODE_VARIABLE MACRO=_select_X_Line VARIABLE=line_selected VALUE={20|float}
  {% endif %}
  RESPOND TYPE=command MSG="action:prompt_end"

[gcode_macro _horizontal_7]
gcode:
  {% if not printer['gcode_macro _select_X_Line'].detailed %}
    SET_GCODE_VARIABLE MACRO=_select_X_Line VARIABLE=line_selected VALUE={printer.save_variables.variables.tool_2_x_offset|float + 1|float}
  {% else %}
    SET_GCODE_VARIABLE MACRO=_select_X_Line VARIABLE=line_selected VALUE={printer.save_variables.variables.tool_2_x_offset|float + 0.1|float}
  {% endif %}
  RESPOND TYPE=command MSG="action:prompt_end"

[gcode_macro _horizontal_8]
gcode:
  {% if not printer['gcode_macro _select_X_Line'].detailed %}
    SET_GCODE_VARIABLE MACRO=_select_X_Line VARIABLE=line_selected VALUE={printer.save_variables.variables.tool_2_x_offset|float + 2|float}
  {% else %}
    SET_GCODE_VARIABLE MACRO=_select_X_Line VARIABLE=line_selected VALUE={printer.save_variables.variables.tool_2_x_offset|float + 0.2|float}
  {% endif %}
  RESPOND TYPE=command MSG="action:prompt_end"

[gcode_macro _horizontal_9]
gcode:
  {% if not printer['gcode_macro _select_X_Line'].detailed %}
    SET_GCODE_VARIABLE MACRO=_select_X_Line VARIABLE=line_selected VALUE={printer.save_variables.variables.tool_2_x_offset|float + 3|float}
  {% else %}
    SET_GCODE_VARIABLE MACRO=_select_X_Line VARIABLE=line_selected VALUE={printer.save_variables.variables.tool_2_x_offset|float + 0.3|float}
  {% endif %}
  RESPOND TYPE=command MSG="action:prompt_end"

[gcode_macro _horizontal_10]
gcode:
  {% if not printer['gcode_macro _select_X_Line'].detailed %}
    SET_GCODE_VARIABLE MACRO=_select_X_Line VARIABLE=line_selected VALUE={printer.save_variables.variables.tool_2_x_offset|float + 4|float}
  {% else %}
    SET_GCODE_VARIABLE MACRO=_select_X_Line VARIABLE=line_selected VALUE={printer.save_variables.variables.tool_2_x_offset|float + 0.4|float}
  {% endif %}
  RESPOND TYPE=command MSG="action:prompt_end"
  
[gcode_macro _horizontal_11]
gcode:
  {% if not printer['gcode_macro _select_X_Line'].detailed %}
    SET_GCODE_VARIABLE MACRO=_select_X_Line VARIABLE=line_selected VALUE={printer.save_variables.variables.tool_2_x_offset|float + 5|float}
  {% else %}
    SET_GCODE_VARIABLE MACRO=_select_X_Line VARIABLE=line_selected VALUE={printer.save_variables.variables.tool_2_x_offset|float + 0.5|float}
  {% endif %}
  RESPOND TYPE=command MSG="action:prompt_end"

[gcode_macro _vertical_1] # It would be better to pass an argument than have a ton of similar functions, but it is what it is.
gcode:
  {% if not printer['gcode_macro _select_Y_Line'].detailed %}
    SET_GCODE_VARIABLE MACRO=_select_Y_Line VARIABLE=line_selected VALUE={printer.save_variables.variables.tool_2_y_offset|float + 5|float}
  {% else %}
    SET_GCODE_VARIABLE MACRO=_select_Y_Line VARIABLE=line_selected VALUE={printer.save_variables.variables.tool_2_y_offset|float + 0.5|float}
  {% endif %}
  RESPOND TYPE=command MSG="action:prompt_end"
    
[gcode_macro _vertical_2] 
gcode:
  {% if not printer['gcode_macro _select_Y_Line'].detailed %}
    SET_GCODE_VARIABLE MACRO=_select_Y_Line VARIABLE=line_selected VALUE={printer.save_variables.variables.tool_2_y_offset|float + 4|float}
  {% else %}
    SET_GCODE_VARIABLE MACRO=_select_Y_Line VARIABLE=line_selected VALUE={printer.save_variables.variables.tool_2_y_offset|float + 0.4|float}
  {% endif %}
  RESPOND TYPE=command MSG="action:prompt_end"

[gcode_macro _vertical_3]
gcode:
  {% if not printer['gcode_macro _select_Y_Line'].detailed %}
    SET_GCODE_VARIABLE MACRO=_select_Y_Line VARIABLE=line_selected VALUE={printer.save_variables.variables.tool_2_y_offset|float + 3|float}
  {% else %}
    SET_GCODE_VARIABLE MACRO=_select_Y_Line VARIABLE=line_selected VALUE={printer.save_variables.variables.tool_2_y_offset|float + 0.3|float}
  {% endif %}
  RESPOND TYPE=command MSG="action:prompt_end"

[gcode_macro _vertical_4]
gcode:
  {% if not printer['gcode_macro _select_Y_Line'].detailed %}
    SET_GCODE_VARIABLE MACRO=_select_Y_Line VARIABLE=line_selected VALUE={printer.save_variables.variables.tool_2_y_offset|float + 2|float}
  {% else %}
    SET_GCODE_VARIABLE MACRO=_select_Y_Line VARIABLE=line_selected VALUE={printer.save_variables.variables.tool_2_y_offset|float + 0.2|float}
  {% endif %}
  RESPOND TYPE=command MSG="action:prompt_end"

[gcode_macro _vertical_5]
gcode:
  {% if not printer['gcode_macro _select_Y_Line'].detailed %}
    SET_GCODE_VARIABLE MACRO=_select_Y_Line VARIABLE=line_selected VALUE={printer.save_variables.variables.tool_2_y_offset|float + 1|float}
  {% else %}
    SET_GCODE_VARIABLE MACRO=_select_Y_Line VARIABLE=line_selected VALUE={printer.save_variables.variables.tool_2_y_offset|float + 0.1|float}
  {% endif %}
  RESPOND TYPE=command MSG="action:prompt_end"

[gcode_macro _vertical_6]
gcode:
  {% if not printer['gcode_macro _select_Y_Line'].detailed %}
    SET_GCODE_VARIABLE MACRO=_select_Y_Line VARIABLE=line_selected VALUE={20|float}
  {% else %}
    SET_GCODE_VARIABLE MACRO=_select_Y_Line VARIABLE=line_selected VALUE={20|float}
  {% endif %}
  RESPOND TYPE=command MSG="action:prompt_end"

[gcode_macro _vertical_7]
gcode:
  {% if not printer['gcode_macro _select_Y_Line'].detailed %}
    SET_GCODE_VARIABLE MACRO=_select_Y_Line VARIABLE=line_selected VALUE={printer.save_variables.variables.tool_2_y_offset|float - 1|float}
  {% else %}
    SET_GCODE_VARIABLE MACRO=_select_Y_Line VARIABLE=line_selected VALUE={printer.save_variables.variables.tool_2_y_offset|float - 0.1|float}
  {% endif %}
  RESPOND TYPE=command MSG="action:prompt_end"

[gcode_macro _vertical_8]
gcode:
  {% if not printer['gcode_macro _select_Y_Line'].detailed %}
    SET_GCODE_VARIABLE MACRO=_select_Y_Line VARIABLE=line_selected VALUE={printer.save_variables.variables.tool_2_y_offset|float - 2|float}
  {% else %}
    SET_GCODE_VARIABLE MACRO=_select_Y_Line VARIABLE=line_selected VALUE={printer.save_variables.variables.tool_2_y_offset|float - 0.2|float}
  {% endif %}
  RESPOND TYPE=command MSG="action:prompt_end"

[gcode_macro _vertical_9]
gcode:
  {% if not printer['gcode_macro _select_Y_Line'].detailed %}
    SET_GCODE_VARIABLE MACRO=_select_Y_Line VARIABLE=line_selected VALUE={printer.save_variables.variables.tool_2_y_offset|float - 3|float}
  {% else %}
    SET_GCODE_VARIABLE MACRO=_select_Y_Line VARIABLE=line_selected VALUE={printer.save_variables.variables.tool_2_y_offset|float - 0.3|float}
  {% endif %}
  RESPOND TYPE=command MSG="action:prompt_end"

[gcode_macro _vertical_10]
gcode:
  {% if not printer['gcode_macro _select_Y_Line'].detailed %}
    SET_GCODE_VARIABLE MACRO=_select_Y_Line VARIABLE=line_selected VALUE={printer.save_variables.variables.tool_2_y_offset|float - 4|float}
  {% else %}
    SET_GCODE_VARIABLE MACRO=_select_Y_Line VARIABLE=line_selected VALUE={printer.save_variables.variables.tool_2_y_offset|float - 0.4|float}
  {% endif %}
  RESPOND TYPE=command MSG="action:prompt_end"
  
[gcode_macro _vertical_11]
gcode:
  {% if not printer['gcode_macro _select_Y_Line'].detailed %}
    SET_GCODE_VARIABLE MACRO=_select_Y_Line VARIABLE=line_selected VALUE={printer.save_variables.variables.tool_2_y_offset|float - 5|float}
  {% else %}
    SET_GCODE_VARIABLE MACRO=_select_Y_Line VARIABLE=line_selected VALUE={printer.save_variables.variables.tool_2_y_offset|float - 0.5|float}
  {% endif %}
  RESPOND TYPE=command MSG="action:prompt_end"
